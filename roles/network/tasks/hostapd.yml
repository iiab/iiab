- name: Unmask the Access Point 'hostapd' service
  systemd:
    name: hostapd
    enabled: no
    masked: no

- name: Disable hostapd when not using ap0 and wifi gateway present, or no WiFi hardware present or support not detected
  set_fact:
    hostapd_enabled: False
  when: (not wifi_up_down and discovered_wireless_iface == iiab_wan_iface) or discovered_wireless_iface == "none" or not can_be_ap

- name: Detect current Wifi channel
  shell: iw {{ discovered_wireless_iface }} info | grep channel | cut -d' ' -f2
  register: current_client_channel
  when: discovered_wireless_iface != "none"

- name: Setting WiFi channel to {{ current_client_channel.stdout }}
  set_fact:
    host_channel: "{{ current_client_channel.stdout }}"
  when: current_client_channel.stdout is defined and current_client_channel.stdout != "" and current_client_channel.stdout|int <= 13

- name: Generate new random mac address for ap0
  shell: tr -dc A-F0-9 < /dev/urandom | head -c 10 | sed -r 's/(..)/\1:/g;s/:$//;s/^/02:/'
  register: ap0_mac

- name: Setting ap0 mac address for use in hostapd service file
  set_fact:
    ap0_mac_addr: "{{ ap0_mac.stdout }}"

- name: "Use custom 'hostapd' systemd service unit file using ap0 -- install from template: /etc/systemd/system/hostapd.service, /etc/systemd/system/iiab-clone-wifi.service, /etc/systemd/system/iiab-wifi-test.service, /usr/sbin/iiab-test-wifi"
  template:
    owner: root
    group: root
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode  }}"
  with_items:
    - { src: 'hostapd/hostapd.service.j2', dest: '/etc/systemd/system/hostapd.service', mode: '0644' }
    - { src: 'hostapd/iiab-clone-wifi.service.j2', dest: '/etc/systemd/system/iiab-clone-wifi.service', mode: '0644' }
    - { src: 'hostapd/iiab-wifi-test.service.j2', dest: '/etc/systemd/system/iiab-wifi-test.service', mode: '0644'}
    - { src: 'hostapd/iiab-test-wifi.j2', dest: '/usr/sbin/iiab-test-wifi', mode: '0755' }
  when: can_be_ap

- name: Use custom 'hostapd' systemd service unit file for {{ discovered_wireless_iface }} when not wifi_up_down
  template:
    src: hostapd/hostapd.legacy.j2
    dest: /etc/systemd/system/hostapd.service
    owner: root
    group: root
    mode: 0644
  when: not wifi_up_down and can_be_ap

- name: Create /usr/bin/iiab-hotspot-on from template
  template:
    src: hostapd/iiab-hotspot-on
    dest: /usr/bin/iiab-hotspot-on
    owner: root
    group: root
    mode: 0755

- name: Create /usr/bin/iiab-hotspot-off from template
  template:
    src: hostapd/iiab-hotspot-off
    dest: /usr/bin/iiab-hotspot-off
    owner: root
    group: root
    mode: 0755

- name: Create dhcpcd hook for hostapd and ap0 when wifi_up_down True
  template:
    src: hostapd/50-hostapd
    dest: /lib/dhcpcd/dhcpcd-hooks/50-hostapd
    owner: root
    group: root
    mode: 0644
  when: is_raspbian and wifi_up_down

- name: Remove dhcpcd hook for hostapd if WiFi is not split using ap0
  file:
    path: /lib/dhcpcd/dhcpcd-hooks/50-hostapd
    state: absent
  when: is_raspbian and not wifi_up_down

- name: Create networkd-dispatcher diagnostic hook for recording network events
  template:
    owner: root
    group: root
    mode: 0755
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/carrier.d/00-iiab-debug' }
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/degraded.d/00-iiab-debug' }
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/dormant.d/00-iiab-debug' }
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/no-carrier.d/00-iiab-debug' }
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/off.d/00-iiab-debug' }
    - { src: 'hostapd/00-iiab-debug', dest: '/etc/networkd-dispatcher/routable.d/00-iiab-debug' }
  when: systemd_networkd_active and discovered_wireless_iface != "none"

- name: Create networkd-dispatcher hook for hostapd wifi_up_down True
  template:
    owner: root
    group: root
    mode: 0755
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'hostapd/netd-disp', dest: '/etc/networkd-dispatcher/carrier.d/iiab-wifi' }
    - { src: 'hostapd/netd-disp', dest: '/etc/networkd-dispatcher/no-carrier.d/iiab-wifi' }
    - { src: 'hostapd/netd-disp2', dest: '/etc/networkd-dispatcher/routable.d/iiab-wifi2' }
  when: systemd_networkd_active and discovered_wireless_iface != "none" and wifi_up_down

- name: Remove networkd-dispatcher hook wifi_up_down False
  file:
    path: "{{ item.dest }}"
    state: absent
  with_items:
    - { dest: '/etc/networkd-dispatcher/carrier.d/iiab-wifi' }
    - { dest: '/etc/networkd-dispatcher/no-carrier.d/iiab-wifi' }
    - { dest: '/etc/networkd-dispatcher/routable.d/iiab-wifi' }
    - { dest: '/etc/networkd-dispatcher/routable.d/iiab-wifi2' }
  when: systemd_networkd_active and discovered_wireless_iface != "none" and not wifi_up_down

- name: Enable the Access Point 'hostapd' service
  systemd:
    name: hostapd
    enabled: yes
  when: hostapd_enabled and not wifi_up_down

- name: Disable ap0 related services
  systemd:
    name: "{{ item }}"
    enabled: no
    daemon_reload: yes    
  with_items:
    - iiab-clone-wifi.service
    - iiab-wifi-test.service
  when: not wifi_up_down

- name: Enable the Access Point 'hostapd' and ap0 related services
  systemd:
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
  with_items:
    - hostapd.service
    - iiab-clone-wifi.service
    - iiab-wifi-test.service
  when: hostapd_enabled and wifi_up_down

- name: Record HOSTAPD_ENABLED to {{ iiab_env_file }}
  lineinfile:
    path: "{{ iiab_env_file }}"
    regexp: '^HOSTAPD_ENABLED=*'
    line: 'HOSTAPD_ENABLED={{ hostapd_enabled }}'
    state: present
