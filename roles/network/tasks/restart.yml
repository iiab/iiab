- name: Start named service
  service: name={{ dns_service }}
           state=started
  when: named_enabled and named_install

- name: Stop DansGuardian
  service: name=dansguardian
           state=stopped
  when: not dansguardian_enabled and dansguardian_install

- name: Restart DansGuardian
  service: name=dansguardian
           state=restarted
  when: dansguardian_enabled and dansguardian_install

- name: Stop Squid service
  service: name={{ proxy }}
           state=stopped
  when: not squid_enabled and squid_install

# Squid get re-loaded with dispatcher.d
- name: Restart Squid service
  service: name={{ proxy }}
           state=started
  when: squid_enabled and squid_install

- name: Restart Wondershaper service
  service: name=wondershaper
            state=restarted
  when: wondershaper_enabled

- name: Restart avahi service
  service: name=avahi-daemon
           state=restarted

- name: Create gateway flag
  shell: echo 1 > /etc/sysconfig/olpc-scripts/setup.d/installed/gateway
         creates=/etc/sysconfig/olpc-scripts/setup.d/installed/gateway
  when: iiab_network_mode == "Gateway"

- name: Run iptables
  command: /usr/bin/iiab-gen-iptables

- name: Checking if wifi slave is active waiting {{ hostapd_wait }} seconds
  shell: "sleep {{ hostapd_wait }} | brctl show br0 | grep {{ iiab_wireless_lan_iface }}"
  when: iiab_lan_iface == "br0" and iiab_wireless_lan_iface != "none"
  register: wifi_slave

- name: Restart hostapd if wifi slave is inactive
  service: name=hostapd.service
           state=restarted
  when: iiab_wireless_lan_iface != "none" and hostapd_enabled and item|trim == ""
  with_items:
      - "{{ wifi_slave.stdout }}"
