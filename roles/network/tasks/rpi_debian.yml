# rpi_debian.yml
# Start out making simplifying assumptions
#   1. we are dealing with a rpi3
#   2. Gui inputs define the config -- auto config is more difficult
#      a. gui_desired_network_role
#      b. hostapd_enabled
#      c. gui_static_wan_ip
#   3. In appliance mode: wan (and wlan0) is either static or dhcp under br0, and hostapd off
#   4. In lan_controller: wan is off, eth0 and wlan0 under br0
#   5. In gateway: eth0 is wan, and wlan0 is under br0 (only one adapter under br0)
#   6. As a slight concess to auto config, if eth1 exists, make it wan, and force gateway

- name: Raspbian stock has openresolv which is not available in Debian, off it
  package: name=openresolv
           state=absent

- name: Get the stock resolv.conf manager
  package: name=resolvconf
           state=absent

- name: On upgrade from earlier IIAB versions, remove /etc/network/interfaces.d/br0
  file: path=/etc/network/interfaces.d/br0
        state=absent
  when: iiab_lan_iface != "br0" and wan_ip == "dhcp"

- name: Default to 'LanController'
  set_fact:
      gui_desired_network_role: "LanController"
  when: not gui_desired_network_role is defined

- name: Rewrite the /etc/network/interfaces file which we corrupted
  template: dest=/etc/network/interfaces
            src=network/interfaces.j2

- name: Supply our own dhcpcd.conf
  template: dest=/etc/dhcpcd.conf
            src=network/dhcpcd.conf.j2
  when: iiab_lan_iface == "br0" or wan_ip != "dhcp"

- name: Copy the network config script
  template: dest=/etc/network/interfaces.d/iiab
            src=network/systemd.j2
  register: interface
  when: iiab_lan_iface == "br0" or wan_ip != "dhcp"

- name: If this was a change, things need to shift
  service: name=hostapd state=stopped
  when: interface.changed

- name: dhcpcd may be affected
  service: name=dhcpcd state=stopped
  when: interface.changed

- name: Tear down any bridge and start fresh
  command: ip link set br0 down
  ignore_errors: True
  when: interface.changed

- name: And remove the device
  command: brctl delbr br0
  ignore_errors: True
  when: interface.changed

- name: Reset the eth0 interface
  command: ifdown eth0
  ignore_errors: True
  when: interface.changed

- name: start up dhcpcd again
  service: name=dhcpcd state=started

# now pick up denyinterfaces
- name: restart dhcpcd
  service: name=dhcpcd state=restarted

- name: restart the networking service
  service: name=networking state=restarted

#create lan br0 if lan_controller or gateway
#create wan br0 if appliance
#allocate wlan0 under br0 in all cases
#allocate eth0 under br0 if appliance, alone if gateway
