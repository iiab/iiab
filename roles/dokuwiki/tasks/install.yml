- name: Download DokuWiki software
  get_url:
    url: "{{ iiab_download_url }}/{{ dokuwiki_version }}.tgz"
    dest: "{{ downloads_dir }}/"
    timeout: "{{ download_timeout }}"
  when: internet_available

- name: Copy it to permanent location /library
  unarchive:
    src: "{{ downloads_dir }}/{{ dokuwiki_version }}.tgz"
    dest: /library
    creates: "/library/{{ dokuwiki_version }}/VERSION"

- name: Symlink /library/{{ dokuwiki_version }} from /library/dokuwiki
  #shell: if [ ! -d /library/dokuwiki ]; then ln -sf /library/{{ dokuwiki_version }} /library/dokuwiki; fi
  #shell: ln -sf /library/{{ dokuwiki_version }} /library/dokuwiki
  #BOTH LINES ABOVE FAIL TO UPDATE LINK; Ansible approach below works
  file:
    path: /library/dokuwiki
    src: /library/{{ dokuwiki_version }}
    state: link
    force: yes

- name: Install config file for DokuWiki in Apache
  template:
    src: dokuwiki.conf.j2
    dest: "/etc/{{ apache_config_dir }}/dokuwiki.conf"
  when: dokuwiki_enabled

- name: Enable the DokuWiki (debuntu)
  file:
    src: /etc/apache2/sites-available/dokuwiki.conf
    dest: /etc/apache2/sites-enabled/dokuwiki.conf
    state: link
  when: dokuwiki_enabled and is_debuntu

- name: Disable the DokuWiki (debuntu)
  file:
    path: /etc/apache2/sites-enabled/dokuwiki.conf
    state: absent
  when: not dokuwiki_enabled and is_debuntu


- name: Change permissions on engine directory so Apache can write
  file:
    path: "/library/{{ dokuwiki_version }}"
    owner: "{{ apache_user }}"
    mode: 0755
    state: directory
    recurse: yes

- name: Restart Apache, so it picks up the new aliases
  service:
    name: "{{ apache_service }}"
    state: restarted
