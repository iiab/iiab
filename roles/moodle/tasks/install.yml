- name: Install APACHE if not installed
  include_tasks: roles/httpd/tasks/install.yml
  when: apache_installed is undefined

- name: "Set 'postgresql_install: True' and 'postgresql_enabled: True'"
  set_fact:
    postgresql_install: True
    postgresql_enabled: True

- name: POSTGRESQL - run 'postgresql' role (attempt to install & enable PostgreSQL)
  include_role:
    name: postgresql


- name: "Install packages: python-psycopg2, php-pgsql (OS's other than debuntu)"
  package:
    name:
      - python-psycopg2
      - php-pgsql
    state: present
  when: not is_debuntu

- name: Install 4 php packages (debuntu)
  package:
    name:
      - php{{ php_version }}-pgsql
      - php{{ php_version }}-curl
      #- php{{ php_version }}-zip
      - php{{ php_version }}-gd
      #- php{{ php_version }}-mbstring
      # mbstring is now included in php-cli
      - php{{ php_version }}-cli
    state: present
  when: is_debuntu | bool

- name: "Install package: php{{ php_version }}-zip (Ubuntu or Debian 9+)"
  package:
    name: "php{{ php_version }}-zip"
  when: is_ubuntu or (is_debian and not is_debian_8)

# - name: "Install package: php-pclzip (debian-8)"
#   package:
#     name: php-pclzip
#   when: is_debian_8 | bool

- name: Does {{ moodle_base }}/config-dist.php exist? (indicating Moodle is/was installed)
  stat:
    path: "{{ moodle_base }}/config-dist.php"
  register: moodle

- name: Clone (i.e. use git to download) {{ moodle_repo_url }} to {{ moodle_base }}
  git:
    repo: "{{ moodle_repo_url }}"
    dest: "{{ moodle_base }}"
    depth: 1
    force: yes
    version: "MOODLE_{{ moodle_version }}_STABLE"
    #version: master   # TEMPORARY DURING MAY 2018 TESTING, installed 3.5beta+ = https://download.moodle.org/releases/development/
  #ignore_errors: yes
  when: internet_available and moodle.stat.exists is defined and not moodle.stat.exists

- name: Create dir {{ moodle_base }} owned by {{ apache_user }} (for config file?)
  file:
    state: directory
    path: "{{ moodle_base }}"
    owner: "{{ apache_user }}"
    recurse: yes

- name: Create dir {{ content_base }}/dbdata/moodle owned by {{ apache_user }}
  file:
    state: directory
    path: "{{ content_base }}/dbdata/moodle"
    owner: "{{ apache_user }}"
    # mode: '0755'

- name: Create dir {{ moodle_data }} ({{ apache_user }}:{{ apache_user }}, '0770')    # /library/moodle
  file:
    state: directory
    path: "{{ moodle_data }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_user }}"
    mode: '0770'

- name: Remove stock /etc/{{ apache_conf_dir }}/moodle.conf
  file:
    path: "/etc/{{ apache_conf_dir }}/moodle.conf"
    state: absent

- name: Install /etc/{{ apache_conf_dir }}/022-moodle.conf from template
  template:
    src: 022-moodle.j2
    dest: "/etc/{{ apache_conf_dir }}/022-moodle.conf"
    # owner: root
    # group: root
    # mode: '0644'

- name: Start 'postgresql-iiab' systemd service, to configure Moodle's DB
  systemd:
    name: postgresql-iiab
    state: started

- name: Create PostgreSQL db user Admin/changeme
  postgresql_user:
    name: Admin
    password: changeme
    encrypted: yes   # Required by PostgreSQL 10+ e.g. Ubuntu 18.04's PostgreSQL 10.3+, see https://github.com/iiab/iiab/issues/759
    role_attr_flags: NOSUPERUSER,NOCREATEROLE,NOCREATEDB
    state: present
  become: yes
  become_user: postgres

- name: 'Create database: {{ moodle_database_name }}'
  postgresql_db:
    name: "{{ moodle_database_name }}"
    encoding: utf8
    owner: Admin
    template: template1
    state: present
  become: yes
  become_user: postgres

- name: Install {{ moodle_base }}/moodle_installer from template ('0755')
  template:
    src: moodle_installer
    dest: "{{ moodle_base }}"
    mode: '0755'

- name: (Re)Start 'postgresql-iiab' systemd service
  systemd:
    name: postgresql-iiab
    state: restarted
    #enabled: yes
  #when: moodle_enabled | bool

- name: (Re)Start '{{ apache_service }}' systemd service
  systemd:
    name: "{{ apache_service }}"
    state: restarted

- name: Does {{ moodle_base }}/config.php exist?
  stat:
    path: "{{ moodle_base }}/config.php"
  register: config

- name: Execute {{ moodle_base }}/moodle_installer
  shell: "{{ moodle_base }}/moodle_installer"
  when: config.stat.exists is defined and not config.stat.exists

- name: Make {{ moodle_base }}/config.php readable, with permission '0644'
  #command: chown -R {{ apache_user }} {{ moodle_base }}
  file:
    path: "{{ moodle_base }}/config.php"    # /opt/iiab/moodle
    mode: '0644'


# RECORD Moodle AS INSTALLED

- name: "Set 'moodle_installed: True'"
  set_fact:
    moodle_installed: True

- name: "Add 'moodle_installed: True' to {{ iiab_state_file }}"
  lineinfile:
    path: "{{ iiab_state_file }}"    # /etc/iiab/iiab_state.yml
    regexp: '^moodle_installed'
    line: 'moodle_installed: True'
