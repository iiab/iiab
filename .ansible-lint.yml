---
# .ansible-lint

profile: basic # min, basic, moderate,safety, shared, production

exclude_paths:
  - vars # vars files are used to configure IIAB, and are read by Ansible. No need to lint them
  - tests.unused # unused files
  - roles/0-DEPRECATED-ROLES # deprecated
  - roles/calibre/templates/users.sqlite # ansible doesn't like the content of this file, but it works
  - roles/network/tasks/fedora/* # no longer support Fedora
  - run-one-role.yml # ansible-lint does not like this file, need to find out why
  - .github/*
  - collections.yml
  - iiab-from-cmdline.yml
  - iiab-from-console.yml
  - iiab-network.yml
  - iiab-stages.yml
  - runroles-base.yml
  - test.yml
# parseable: true
# quiet: true
# strict: true
# verbosity: 1

# Enable checking of loop variable prefixes in roles
loop_var_prefix: "^(__|{role}_)"

# Enforce variable names to follow pattern below, in addition to Ansible own
# requirements, like avoiding python identifiers. To disable add `var-naming`
# to skip_list.
var_naming_pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"

use_default_rules: true
# Load custom rules from this specific folder
# rulesdir:
#   - ./rule/directory/

# Ansible-lint is able to recognize and load skip rules stored inside
# `.ansible-lint-ignore` (or `.config/ansible-lint-ignore.txt`) files.
# To skip a rule just enter filename and tag, like "playbook.yml package-latest"
# on a new line.
# Optionally you can add comments after the tag, prefixed by "#". We discourage
# the use of skip_list below because that will hide violations from the output.
# When putting ignores inside the ignore file, they are marked as ignored, but
# still visible, making it easier to address later.
skip_list:
  - yaml[comments] # ignore comments without leading space
  - yaml[truthy] # ignore values that are True / False instead of true / false
  - yaml[line-length] # 338 instances, but we probably don't care about this so much
  - name[missing] # 140 instances
  - name[template] # 354 instances
  - name[casing] # 47 instances
  - name[play] # 6 instances
  - command-instead-of-module # 11 instances, specific
  - command-instead-of-shell # 12 instances, specific
  - role-name # 14 instances, talk to Adam
  - var-naming[no-role-prefix] # 65 instances, talk to Adam
  - yaml[trailing-spaces] # 2 instances
  - jinja[spacing] # 58 instances
# Ansible-lint does not automatically load rules that have the 'opt-in' tag.
# You must enable opt-in rules by listing each rule 'id' below.
# enable_list:
#   - name[prefix] # opt-in, example: task named "Restart server" in deploy.yml -> deploy | Restart server
# Report only a subset of tags and fully ignore any others
# tags:
#   - jinja[spacing]

# Ansible-lint does not fail on warnings from the rules or tags listed below
warn_list:
  - skip_this_tag
  - experimental # experimental is included in the implicit list
  # - role-name
  # - yaml[document-start]  # you can also use sub-rule matches

# Some rules can transform files to fix (or make it easier to fix) identified
# errors. `ansible-lint --fix` will reformat YAML files and run these transforms.
# By default it will run all transforms (effectively `write_list: ["all"]`).
# You can disable running transforms by setting `write_list: ["none"]`.
# Or only enable a subset of rule transforms by listing rules/tags here.
# write_list:
#   - all

# Offline mode disables installation of requirements.yml and schema refreshing
offline: true

# Define required Ansible's variables to satisfy syntax check
# extra_vars:
#  foo: bar
#  multiline_string_variable: |
#    line1
#    line2
#  complex_variable: ":{;\t$()"

# Uncomment to enforce action validation with tasks, usually is not
# needed as Ansible syntax check also covers it.
# skip_action_validation: false

# List of additional kind:pattern to be added at the top of the default
# match list, first match determines the file kind.
kinds:
  # - playbook: "**/examples/*.{yml,yaml}"
  # - galaxy: "**/folder/galaxy.yml"
  # - tasks: "**/tasks/*.yml"
  # - vars: "**/vars/*.yml"
  # - meta: "**/meta/main.yml"
  - yaml: "**/*.yaml-too"

# List of additional collections to allow in only-builtins rule.
# only_builtins_allow_collections:
#   - example_ns.example_collection

# List of additions modules to allow in only-builtins rule.
# only_builtins_allow_modules:
#   - example_module

# Allow setting custom prefix for name[prefix] rule
task_name_prefix: "{stem} | "
# Complexity related settings

# Limit the depth of the nested blocks:
# max_block_depth: 20

# Also recognize these versions of Ansible as supported:
# supported_ansible_also:
#   - "2.18"
