#!/bin/bash -e

APT_PATH=/usr/bin    # Avoids problematic /usr/local/bin/apt on Linux Mint
CURR_VER="undefined"    # Ansible version you currently have installed
GOOD_VER="2.9.6"    # For XO laptops (pip install) & CentOS (yum install rpm)
# On most/other OS's we install the latest (likely more recent!) from PPA:
# https://launchpad.net/~ansible/+archive/ubuntu/ansible

export DEBIAN_FRONTEND=noninteractive
source /etc/os-release
if [ $VERSION_CODENAME = "buster" ]; then
    release=bionic
elif [ $VERSION_CODENAME = "focal" ]; then
    release=eoan
else
    echo -e "\nEXITING: Could not detect your OS (unsupported?)\n"
    exit 1
fi

echo -e "\n\nYOU ARE RUNNING: /opt/iiab/iiab/scripts/ansible (TO INSTALL ANSIBLE)"
#echo -e 'Alternative:     /opt/iiab/iiab/scripts/ansible-2.8.x ("Slow Food")\n'
echo -e "RECOMMENDED PREREQUISITES:"
echo -e "(1) Verify you're online"
echo -e "(2) Remove all prior versions of Ansible using"
echo -e "    'apt purge ansible' and/or 'pip uninstall ansible'"
echo -e "(3) Remove all lines containing 'ansible' from"
echo -e "    /etc/apt/sources.list and /etc/apt/sources.list.d/*\n"

echo -e "COMPLETE INSTALL INSTRUCTIONS:"
echo -e "https://github.com/iiab/iiab/wiki/IIAB-Installation#do-everything-from-scratch\n"

if [ $(command -v ansible-playbook) ]; then    # "command -v" is POSIX compliant; also catches built-in commands like "cd"
    CURR_VER=`ansible --version | head -1 | awk '{print $2}'`    # To match iiab-install.  Was: CURR_VER=`ansible --version | head -n 1 | cut -f 2 -d " "`
    echo -e "CURRENTLY INSTALLED ANSIBLE: $CURR_VER -- LET'S TRY TO UPGRADE IT!"
    echo -e "(Internet-in-a-Box requests Ansible $GOOD_VER or higher)\n"
else
    echo -e "ANSIBLE NOT FOUND ON THIS COMPUTER -- LET'S TRY TO INSTALL IT!"
    echo -e "(Internet-in-a-Box requests Ansible $GOOD_VER or higher)\n"
fi

echo -e "\napt update; install dirmngr; PPA to /etc/apt/sources.list.d/iiab-ansible.list\n"
echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu "$release" main" \
    > /etc/apt/sources.list.d/iiab-ansible.list
$APT_PATH/apt update
$APT_PATH/apt -y install dirmngr
echo -e '\nIF YOU FACE ERROR "signatures couldn'"'"'t be verified because the public key is not available" THEN REPEATEDLY RE-RUN "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 93C4A3FD7BB9C367"\n'
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 93C4A3FD7BB9C367
echo -e 'PPA source "deb http://ppa.launchpad.net/ansible/ansible/ubuntu $release main"'
echo -e "successfully saved to /etc/apt/sources.list.d/iiab-ansible.list\n"
echo -e "IF *OTHER* ANSIBLE SOURCES APPEAR BELOW, PLEASE MANUALLY REMOVE THEM TO"
echo -e 'ENSURE ANSIBLE UPDATES CLEANLY: (then re-run this script to be sure!)\n'
grep '^deb .*ansible' /etc/apt/sources.list /etc/apt/sources.list.d/*.list | grep -v '^/etc/apt/sources.list.d/iiab-ansible.list:' || true    # Override bash -e (instead of aborting at 1st error)

echo -e "\napt update; apt install ansible and python3 dependencies explained at:"
echo -e "https://github.com/iiab/iiab/tree/master/scripts/ansible.md\n"
$APT_PATH/apt update
$APT_PATH/apt -y --allow-downgrades install ansible python3-pymysql python3-psycopg2 \
    python3-passlib python3-pip python3-setuptools python3-venv virtualenv

echo -e "\nSUCCESS: verify Ansible using 'ansible --version' and/or 'apt -a list ansible'\n\n"

# Needed?
mkdir -p /etc/ansible
echo -e '[local]\nlocalhost\n' > /etc/ansible/hosts
